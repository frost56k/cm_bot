# handlers/user_handlers.py
from aiogram import Router, types, F
from aiogram.filters import Command
from services.ai_service import get_ai_response
from storage.conversations_storage import get_conversation, update_chat_history
import logging

logger = logging.getLogger(__name__)
router = Router()

@router.message(Command("start"))
async def start_handler(msg: types.Message):
    user = msg.from_user
    welcome_text = (
        f"–ü—Ä–∏–≤–µ—Ç, {user.full_name}! –Ø ‚Äî –ö–æ—Ñ–µ –ú–∞—Å—Ç–µ—Ä, –≤–∞—à –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ä–µ–º–æ–Ω—Ç—É –∫–æ—Ñ–µ–º–∞—à–∏–Ω. üõ†Ô∏è\n\n"
        f"–ù–∞—à —á–∞—Ç-–±–æ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ. –ï—Å–ª–∏ —É–≤–∏–¥–∏—Ç–µ –æ—à–∏–±–∫–∏, –ø–∏—à–∏—Ç–µ: coffeemasterbel@gmail.com\n"
        f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /coffeeshop, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥ –∫–æ—Ñ–µ."
    )
    await msg.answer(welcome_text)
    if str(user.id) not in (await get_conversation(user.id)):
        await update_chat_history(user.id, "", "user")  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—É—Å—Ç–æ–π –∏—Å—Ç–æ—Ä–∏–∏
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º")

@router.message(F.text)
async def message_handler(msg: types.Message):
    user_id = msg.from_user.id
    user_message = msg.text
    await msg.bot.send_chat_action(msg.chat.id, "typing")
    await update_chat_history(user_id, user_message, "user")
    
    conversation = await get_conversation(user_id)
    messages = conversation.get("messages", [])
    ai_response = await get_ai_response([{"role": m["role"], "content": m["message"]} for m in messages[-20:]])
    await update_chat_history(user_id, ai_response, "assistant")
    await msg.answer(ai_response)
    logger.info(f"–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")